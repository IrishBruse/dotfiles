[
    {
        "key": "cmd+enter",
        "command": "-acceptRenameInputWithPreview",
        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
    },
    {
        "key": "cmd+.",
        "command": "-acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "cmd+e",
        "command": "-actions.findWithSelection"
    },
    {
        "key": "shift+cmd+l",
        "command": "-addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+;",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "shift+cmd+.",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "alt+right",
        "command": "-breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+right",
        "command": "-breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+left",
        "command": "-breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "alt+left",
        "command": "-breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+enter",
        "command": "-breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "cmd+enter",
        "command": "-breadcrumbs.revealFocusedFromTreeAside",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "shift+cmd+.",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "cmd+up",
        "command": "-chat.action.focus",
        "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
    },
    {
        "key": "cmd+up",
        "command": "-chat.action.focus",
        "when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus"
    },
    {
        "key": "cmd+down",
        "command": "-chat.action.focus",
        "when": "inChat && inChatInput && quickChatHasFocus"
    },
    {
        "key": "cmd+c",
        "command": "-chat.inlineResourceAnchor.copyResource",
        "when": "chatAttachmentResource"
    },
    {
        "key": "cmd+enter",
        "command": "-chatEditing.acceptAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "cmd+backspace",
        "command": "-chatEditing.discardAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "cmd+s",
        "command": "-chatEditing.saveAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "cmd+enter",
        "command": "-chatEditor.action.accept",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "cmd+backspace",
        "command": "-chatEditor.action.reject",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "shift+cmd+backspace",
        "command": "-chatEditor.action.undoHunk",
        "when": "editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
    },
    {
        "key": "cmd+f",
        "command": "-commentsFocusFilter",
        "when": "focusedView == 'workbench.panel.comments'"
    },
    {
        "key": "cmd+down",
        "command": "-commentsFocusViewFromFilter",
        "when": "commentsFilterFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "-copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+cmd+c",
        "command": "-copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "cmd+k shift+alt+cmd+c",
        "command": "-copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "cmd+down",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+down",
        "command": "-cursorBottomSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+down",
        "command": "-cursorColumnSelectDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+left",
        "command": "-cursorColumnSelectLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+pagedown",
        "command": "-cursorColumnSelectPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+pageup",
        "command": "-cursorColumnSelectPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+right",
        "command": "-cursorColumnSelectRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+cmd+up",
        "command": "-cursorColumnSelectUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-cursorDown",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+right",
        "command": "-cursorEnd",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "shift+cmd+right",
        "command": "-cursorEndSelect",
        "when": "textInputFocus",
        "args": {
            "sticky": false
        }
    },
    {
        "key": "cmd+left",
        "command": "-cursorHome",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+left",
        "command": "-cursorHomeSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-cursorLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-cursorLineEnd",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "-cursorLineEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+a",
        "command": "-cursorLineStart",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "-cursorLineStartSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+up",
        "command": "-cursorTopSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+u",
        "command": "-cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-cursorUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+left",
        "command": "-cursorWordAccessibilityLeft",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "shift+cmd+left",
        "command": "-cursorWordAccessibilityLeftSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "cmd+right",
        "command": "-cursorWordAccessibilityRight",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "shift+cmd+right",
        "command": "-cursorWordAccessibilityRightSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "alt+right",
        "command": "-cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "alt+left",
        "command": "-cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-cursorWordPartLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+left",
        "command": "-cursorWordPartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-cursorWordPartRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+alt+right",
        "command": "-cursorWordPartRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "cmd+f5",
        "command": "-debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "cmd+backspace",
        "command": "-debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointInputFocused"
    },
    {
        "key": "cmd+backspace",
        "command": "-debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "enter",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "enter",
        "command": "-debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "cmd+backspace",
        "command": "-deleteAllLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+delete",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+backspace",
        "command": "-deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+backspace",
        "command": "-deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+h",
        "command": "-deleteLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+delete",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+d",
        "command": "-deleteRight",
        "when": "textInputFocus"
    },
    {
        "key": "alt+backspace",
        "command": "-deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "-deleteWordPartLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+delete",
        "command": "-deleteWordPartRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+delete",
        "command": "-deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+.",
        "command": "-editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "shift+cmd+o",
        "command": "-editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-editor.action.accessibleViewNextCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-editor.action.accessibleViewPreviousCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "-editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+d",
        "command": "-editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+.",
        "command": "-editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "shift+alt+a",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f2",
        "command": "-editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+c",
        "command": "-editor.action.clipboardCopyAction"
    },
    {
        "key": "cmd+x",
        "command": "-editor.action.clipboardCutAction"
    },
    {
        "key": "cmd+v",
        "command": "-editor.action.clipboardPasteAction"
    },
    {
        "key": "cmd+/",
        "command": "-editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "-editor.action.defineKeybinding",
        "when": "resource == 'vscode-userdata:/Users/runner/work/vs-code-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json'"
    },
    {
        "key": "shift+cmd+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+f",
        "command": "-editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+down",
        "command": "-editor.action.goToBottomHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus"
    },
    {
        "key": "cmd+up",
        "command": "-editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "shift+cmd+.",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+,",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+cmd+f2",
        "command": "-editor.action.linkedEditing",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+k cmd+d",
        "command": "-editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k alt+cmd+down",
        "command": "-editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "cmd+g",
        "command": "-editor.action.nextMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+f3",
        "command": "-editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "shift+cmd+f12",
        "command": "-editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k alt+cmd+up",
        "command": "-editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "shift+cmd+g",
        "command": "-editor.action.previousMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "shift+cmd+f3",
        "command": "-editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "cmd+.",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+backspace",
        "command": "-editor.action.removeBrackets",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+u",
        "command": "-editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible && replaceInputFocussed"
    },
    {
        "key": "shift+cmd+1",
        "command": "-editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "cmd+f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
    },
    {
        "key": "cmd+k f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+k cmd+f12",
        "command": "-editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "cmd+a",
        "command": "-editor.action.selectAll"
    },
    {
        "key": "cmd+k cmd+k",
        "command": "-editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "shift+cmd+l",
        "command": "-editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k cmd+b",
        "command": "-editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+right",
        "command": "-editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+cmd+left",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+cmd+f",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "cmd+enter",
        "command": "-editor.action.submitComment",
        "when": "commentEditorFocused"
    },
    {
        "key": "alt+cmd+o",
        "command": "-editor.action.toggleOvertypeInsertMode"
    },
    {
        "key": "cmd+e",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "shift+alt+f1",
        "command": "-editor.action.toggleScreenReaderAccessibilityMode"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+t",
        "command": "-editor.action.transposeLetters",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+space",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "cmd+i",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "alt+escape",
        "command": "-editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "cmd+k cmd+x",
        "command": "-editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+f",
        "command": "-editor.action.webvieweditor.showFind",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "cmd+.",
        "command": "-editor.changeDropType",
        "when": "dropWidgetVisible"
    },
    {
        "key": "cmd+.",
        "command": "-editor.changePasteType",
        "when": "pasteWidgetVisible"
    },
    {
        "key": "cmd+k cmd+,",
        "command": "-editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "alt+cmd+[",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+/",
        "command": "-editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+-",
        "command": "-editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+8",
        "command": "-editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+1",
        "command": "-editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+2",
        "command": "-editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+3",
        "command": "-editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+4",
        "command": "-editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+5",
        "command": "-editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+6",
        "command": "-editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+7",
        "command": "-editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+[",
        "command": "-editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+.",
        "command": "-editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+l",
        "command": "-editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k shift+cmd+l",
        "command": "-editor.toggleFoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "alt+cmd+]",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+=",
        "command": "-editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+9",
        "command": "-editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+k cmd+]",
        "command": "-editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "cmd+c",
        "command": "-execCopy"
    },
    {
        "key": "cmd+x",
        "command": "-execCut"
    },
    {
        "key": "cmd+v",
        "command": "-execPaste"
    },
    {
        "key": "cmd+l",
        "command": "-expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "cmd+c",
        "command": "-filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "cmd+x",
        "command": "-filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+v",
        "command": "-filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+i",
        "command": "-focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "cmd+k alt+cmd+s",
        "command": "-git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "cmd+k cmd+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "cmd+enter",
        "command": "-inlineChat.acceptChanges",
        "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatVisible && config.inlineChat.mode != 'preview'"
    },
    {
        "key": "cmd+down",
        "command": "-inlineChat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
        "key": "cmd+up",
        "command": "-inlineChat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
        "key": "cmd+down",
        "command": "-inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
    },
    {
        "key": "cmd+up",
        "command": "-inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.holdForSpeech",
        "when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
    },
    {
        "key": "cmd+r",
        "command": "-inlineChat.regenerate",
        "when": "inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
    },
    {
        "key": "cmd+k i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "cmd+i",
        "command": "-inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "cmd+z",
        "command": "-inlineChat.unstash",
        "when": "inlineChatHasStashedSession && !editorReadonly"
    },
    {
        "key": "cmd+down",
        "command": "-inlineChat.viewInChat",
        "when": "inChatInput && inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "cmd+enter",
        "command": "-interactive.execute",
        "when": "isCompositeNotebook && activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "cmd+up",
        "command": "-interactive.history.focus",
        "when": "isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused"
    },
    {
        "key": "cmd+up",
        "command": "-interactive.history.focus",
        "when": "isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
    },
    {
        "key": "cmd+down",
        "command": "-interactive.scrollToBottom",
        "when": "activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "cmd+up",
        "command": "-interactive.scrollToTop",
        "when": "activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "cmd+k cmd+a",
        "command": "-keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+c",
        "command": "-keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus && !whenFocus"
    },
    {
        "key": "cmd+k cmd+e",
        "command": "-keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "cmd+down",
        "command": "-keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+cmd+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "cmd+backspace",
        "command": "-keybindings.editor.removeKeybinding",
        "when": "inKeybindings && keybindingFocus && !inputFocus"
    },
    {
        "key": "cmd+f",
        "command": "-keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "alt+cmd+p",
        "command": "-keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+o",
        "command": "-lineBreakInsert",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+up",
        "command": "-list.collapse",
        "when": "listFocus && treeElementCanCollapse && !inputFocus && !treestickyScrollFocused || listFocus && treeElementHasParent && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "shift+cmd+up",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+left",
        "command": "-list.collapseAll",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "alt+cmd+f",
        "command": "-list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "alt+cmd+f",
        "command": "-list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-list.focusAnyDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+alt+p",
        "command": "-list.focusAnyUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+n",
        "command": "-list.focusDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+p",
        "command": "-list.focusUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+down",
        "command": "-list.scrollDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
    },
    {
        "key": "cmd+up",
        "command": "-list.scrollUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
    },
    {
        "key": "cmd+down",
        "command": "-list.select",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+a",
        "command": "-list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-list.showHover",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "cmd+up",
        "command": "-list.stickyScroll.collapse",
        "when": "treestickyScrollFocused"
    },
    {
        "key": "cmd+down",
        "command": "-list.stickyScrollselect",
        "when": "treestickyScrollFocused"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-list.toggleSelection",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "shift+cmd+v",
        "command": "-markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "cmd+backspace",
        "command": "-moveFileToTrash",
        "when": "explorerResourceMoveableToTrash && filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+d",
        "command": "-notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.chat.acceptChanges",
        "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.chat.acceptChanges",
        "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.cell.chat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.cell.chat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.cell.chat.focusNextCell",
        "when": "inlineChatFocused && notebookCellChatFocused"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.cell.chat.focusPreviousCell",
        "when": "inlineChatFocused && notebookCellChatFocused"
    },
    {
        "key": "cmd+k i",
        "command": "-notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+i",
        "command": "-notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "-notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "cmd+k t",
        "command": "-notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+backspace",
        "command": "-notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "cmd+k cmd+c",
        "command": "-notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "cmd+k t",
        "command": "-notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.cell.focusChatWidget",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.cell.focusInOutput",
        "when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-notebook.cell.focusInOutput",
        "when": "notebookCellHasOutputs && notebookEditorFocused"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.cell.focusNextChatWidget",
        "when": "editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "-notebook.cell.focusOutOutput",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+enter",
        "command": "-notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
    },
    {
        "key": "ctrl+shift+alt+j",
        "command": "-notebook.cell.joinAbove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "cmd+.",
        "command": "-notebook.cell.openFailureActions",
        "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
    },
    {
        "key": "cmd+a",
        "command": "-notebook.cell.output.selectAll",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "shift+cmd+v",
        "command": "-notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "-notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "-notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "cmd+k y",
        "command": "-notebook.cell.toggleOutputScrolling",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
        "key": "cmd+/",
        "command": "-notebook.commentSelectedCells",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+f",
        "command": "-notebook.find",
        "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "cmd+end",
        "command": "-notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-notebook.focusNextEditor",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+pageup",
        "command": "-notebook.focusNextEditor",
        "when": "accessibilityModeEnabled && notebookCellEditorFocused"
    },
    {
        "key": "cmd+home",
        "command": "-notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
    },
    {
        "key": "alt+cmd+[",
        "command": "-notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+alt+f",
        "command": "-notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+cmd+l",
        "command": "-notebook.selectAllFindMatches",
        "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "alt+cmd+]",
        "command": "-notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "shift+cmd+a",
        "command": "-notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    },
    {
        "key": "cmd+backspace",
        "command": "-notification.clear",
        "when": "notificationFocus"
    },
    {
        "key": "cmd+k shift+cmd+n",
        "command": "-notifications.showList"
    },
    {
        "key": "cmd+enter",
        "command": "-previewSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+c",
        "command": "-problems.action.copy",
        "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "cmd+f",
        "command": "-problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "cmd+down",
        "command": "-problems.action.focusProblemsFromFilter",
        "when": "problemsFilterFocus"
    },
    {
        "key": "cmd+down",
        "command": "-problems.action.open",
        "when": "problemFocus"
    },
    {
        "key": "cmd+.",
        "command": "-problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+alt+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+right",
        "command": "-quickInput.acceptInBackground",
        "when": "cursorAtEndOfQuickInputBox && inQuickInput && quickInputType == 'quickPick' || inQuickInput && !inputFocus && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+home",
        "command": "-quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+home",
        "command": "-quickInput.first",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+end",
        "command": "-quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+end",
        "command": "-quickInput.last",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+down",
        "command": "-quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+down",
        "command": "-quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+down",
        "command": "-quickInput.nextSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+pagedown",
        "command": "-quickInput.pageNext",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+pageup",
        "command": "-quickInput.pagePrevious",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+cmd+up",
        "command": "-quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "-quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+cmd+up",
        "command": "-quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "cmd+up",
        "command": "-quickInput.previousSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo"
    },
    {
        "key": "cmd+enter",
        "command": "-refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "key": "cmd+backspace",
        "command": "-remote.tunnel.closeInline",
        "when": "tunnelCloseable && tunnelViewFocus"
    },
    {
        "key": "cmd+c",
        "command": "-remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
    },
    {
        "key": "enter",
        "command": "-remote.tunnel.label",
        "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
    },
    {
        "key": "enter",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "cmd+f",
        "command": "-repl.action.filter",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "alt+cmd+f",
        "command": "-repl.action.find",
        "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
    },
    {
        "key": "cmd+enter",
        "command": "-repl.execute",
        "when": "isCompositeNotebook && activeEditor == 'workbench.editor.repl'"
    },
    {
        "key": "cmd+down",
        "command": "-repl.input.focus",
        "when": "isCompositeNotebook && notebookEditorFocused"
    },
    {
        "key": "shift+cmd+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+cmd+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "cmd+down",
        "command": "-revealReference",
        "when": "listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand && !treestickyScrollFocused"
    },
    {
        "key": "alt+cmd+s",
        "command": "-saveAll"
    },
    {
        "key": "cmd+enter",
        "command": "-scm.acceptInput",
        "when": "scmRepository"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+pageup",
        "command": "-scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+pagedown",
        "command": "-scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+pageup",
        "command": "-scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+c",
        "command": "-search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "cmd+up",
        "command": "-search.action.focusSearchFromResults",
        "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "cmd+enter",
        "command": "-search.action.openInEditor",
        "when": "hasSearchResult && searchViewletFocus"
    },
    {
        "key": "cmd+down",
        "command": "-search.action.openResult",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "cmd+backspace",
        "command": "-search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "shift+cmd+1",
        "command": "-search.action.replace",
        "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+1",
        "command": "-search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "shift+cmd+1",
        "command": "-search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "cmd+down",
        "command": "-search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "cmd+up",
        "command": "-search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "shift+cmd+backspace",
        "command": "-search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "shift+cmd+l",
        "command": "-selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+down",
        "command": "-selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+pagedown",
        "command": "-selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+n",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+p",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+up",
        "command": "-selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "cmd+pageup",
        "command": "-selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+p",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+up",
        "command": "-selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+n",
        "command": "-showNextParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "ctrl+p",
        "command": "-showPrevParameterHint",
        "when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
    },
    {
        "key": "cmd+; cmd+x",
        "command": "-testing.cancelRun"
    },
    {
        "key": "cmd+; shift+cmd+a",
        "command": "-testing.coverageAll"
    },
    {
        "key": "cmd+; shift+cmd+c",
        "command": "-testing.coverageAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; shift+cmd+f",
        "command": "-testing.coverageCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; shift+cmd+l",
        "command": "-testing.coverageLastRun"
    },
    {
        "key": "cmd+; cmd+a",
        "command": "-testing.debugAll"
    },
    {
        "key": "cmd+; cmd+c",
        "command": "-testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; cmd+f",
        "command": "-testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; cmd+e",
        "command": "-testing.debugFailTests"
    },
    {
        "key": "cmd+; cmd+l",
        "command": "-testing.debugLastRun"
    },
    {
        "key": "cmd+; cmd+m",
        "command": "-testing.openOutputPeek"
    },
    {
        "key": "cmd+; cmd+r",
        "command": "-testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "cmd+; e",
        "command": "-testing.reRunFailTests"
    },
    {
        "key": "cmd+; l",
        "command": "-testing.reRunLastRun"
    },
    {
        "key": "cmd+; a",
        "command": "-testing.runAll"
    },
    {
        "key": "cmd+; c",
        "command": "-testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; f",
        "command": "-testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "cmd+; cmd+o",
        "command": "-testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "cmd+; shift+cmd+i",
        "command": "-testing.toggleInlineCoverage"
    },
    {
        "key": "cmd+; cmd+i",
        "command": "-testing.toggleInlineTestOutput"
    },
    {
        "key": "cmd+/",
        "command": "-toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "cmd+k f2",
        "command": "-togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "alt+cmd+p",
        "command": "-togglePreserveCase",
        "when": "editorFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleSearchCaseSensitive",
        "when": "searchViewletFocus && !fileMatchOrFolderMatchFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+l",
        "command": "-toggleSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+cmd+p",
        "command": "-toggleSearchPreserveCase",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+cmd+r",
        "command": "-toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+cmd+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "cmd+i",
        "command": "-toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "cmd+z",
        "command": "-undo"
    },
    {
        "key": "cmd+k down",
        "command": "-views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k left",
        "command": "-views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k right",
        "command": "-views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "cmd+k up",
        "command": "-views.moveViewUp",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+alt+cmd+n",
        "command": "-welcome.showNewFileEntries"
    },
    {
        "key": "cmd+down",
        "command": "-widgetNavigation.focusNext",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
    },
    {
        "key": "cmd+up",
        "command": "-widgetNavigation.focusPrevious",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
    },
    {
        "key": "cmd+k alt+cmd+c",
        "command": "-workbench.action.addComment",
        "when": "activeCursorHasCommentingRange"
    },
    {
        "key": "cmd+/",
        "command": "-workbench.action.chat.attachContext",
        "when": "inChatInput && chatLocation == 'editing-session' || inChatInput && chatLocation == 'editor' || inChatInput && chatLocation == 'notebook' || inChatInput && chatLocation == 'panel' || inChatInput && chatLocation == 'terminal'"
    },
    {
        "key": "cmd+escape",
        "command": "-workbench.action.chat.cancel"
    },
    {
        "key": "cmd+down",
        "command": "-workbench.action.chat.focusInput",
        "when": "inChat && !inChatInput && !quickChatHasFocus"
    },
    {
        "key": "cmd+up",
        "command": "-workbench.action.chat.focusInput",
        "when": "inChat && quickChatHasFocus && !inChatInput"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.chat.holdToVoiceChatInChatView",
        "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-workbench.action.chat.nextCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "cmd+f9",
        "command": "-workbench.action.chat.nextFileTree",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered || chatSetupInstalled"
    },
    {
        "key": "shift+cmd+i",
        "command": "-workbench.action.chat.openEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-workbench.action.chat.previousCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "shift+cmd+f9",
        "command": "-workbench.action.chat.previousFileTree",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "cmd+backspace",
        "command": "-workbench.action.chat.remove",
        "when": "inChat && !inChatInput && chatLocation != 'editing-session'"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.chat.sendToChatEditing",
        "when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'"
    },
    {
        "key": "shift+cmd+enter",
        "command": "-workbench.action.chat.sendToNewChat",
        "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.chat.stopListeningAndSubmit",
        "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
    },
    {
        "key": "cmd+enter",
        "command": "-workbench.action.chat.submitSecondaryAgent",
        "when": "chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress"
    },
    {
        "key": "cmd+backspace",
        "command": "-workbench.action.chat.undoEdits",
        "when": "inChat && !inChatInput && chatLocation == 'editing-session'"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeActiveEditor"
    },
    {
        "key": "cmd+k cmd+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "cmd+k shift+cmd+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "cmd+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "cmd+k f",
        "command": "-workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "alt+cmd+t",
        "command": "-workbench.action.closeOtherEditors"
    },
    {
        "key": "cmd+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "shift+cmd+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.closeWindow",
        "when": "!editorIsOpen && !multipleEditorGroups"
    },
    {
        "key": "cmd+k shift+o",
        "command": "-workbench.action.compareEditor.openSide",
        "when": "inDiffEditor"
    },
    {
        "key": "cmd+k o",
        "command": "-workbench.action.copyEditorToNewWindow",
        "when": "activeEditor"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "shift+cmd+f5",
        "command": "-workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "cmd+f11",
        "command": "-workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "cmd+k m",
        "command": "-workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "alt+cmd+v",
        "command": "-workbench.action.editorDictation.start",
        "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
    },
    {
        "key": "cmd+k p",
        "command": "-workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "cmd+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFile",
        "when": "false"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "cmd+o",
        "command": "-workbench.action.files.openLocalFileFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "cmd+k r",
        "command": "-workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "shift+cmd+s",
        "command": "-workbench.action.files.saveAs"
    },
    {
        "key": "shift+cmd+s",
        "command": "-workbench.action.files.saveLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "cmd+k s",
        "command": "-workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.findInFiles"
    },
    {
        "key": "cmd+k cmd+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "cmd+k cmd+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "cmd+8",
        "command": "-workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "cmd+5",
        "command": "-workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "cmd+1",
        "command": "-workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "cmd+4",
        "command": "-workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "cmd+k cmd+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "cmd+k cmd+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "cmd+2",
        "command": "-workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "cmd+7",
        "command": "-workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "cmd+0",
        "command": "-workbench.action.focusSideBar"
    },
    {
        "key": "cmd+6",
        "command": "-workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "cmd+3",
        "command": "-workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "-workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "cmd+k enter",
        "command": "-workbench.action.keepEditor"
    },
    {
        "key": "cmd+k cmd+r",
        "command": "-workbench.action.keybindingsReference"
    },
    {
        "key": "cmd+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "cmd+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "cmd+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "cmd+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "cmd+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "cmd+k shift+cmd+left",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "cmd+k shift+cmd+right",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+cmd+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "ctrl+cmd+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "cmd+k cmd+q",
        "command": "-workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "shift+cmd+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "cmd+k alt+cmd+right",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+3",
        "command": "-workbench.action.openEditorAtIndex3"
    },
    {
        "key": "ctrl+4",
        "command": "-workbench.action.openEditorAtIndex4"
    },
    {
        "key": "ctrl+5",
        "command": "-workbench.action.openEditorAtIndex5"
    },
    {
        "key": "ctrl+6",
        "command": "-workbench.action.openEditorAtIndex6"
    },
    {
        "key": "ctrl+7",
        "command": "-workbench.action.openEditorAtIndex7"
    },
    {
        "key": "ctrl+8",
        "command": "-workbench.action.openEditorAtIndex8"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.openEditorAtIndex9"
    },
    {
        "key": "cmd+k cmd+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "cmd+,",
        "command": "-workbench.action.openSettings"
    },
    {
        "key": "shift+cmd+u",
        "command": "-workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "cmd+k shift+enter",
        "command": "-workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "cmd+k alt+cmd+left",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "shift+alt+cmd+l",
        "command": "-workbench.action.quickchat.toggle",
        "when": "chatIsEnabled"
    },
    {
        "key": "ctrl+-",
        "command": "-workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "cmd+p",
        "command": "-workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenNavigateNextInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+q",
        "command": "-workbench.action.quickOpenNavigatePreviousInViewPicker",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.quickOpenSelectNext",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpenSelectPrevious",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+q",
        "command": "-workbench.action.quickOpenView"
    },
    {
        "key": "cmd+q",
        "command": "-workbench.action.quit"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "alt+cmd+o",
        "command": "-workbench.action.remote.showMenu"
    },
    {
        "key": "shift+cmd+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "shift+cmd+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "shift+cmd+j",
        "command": "-workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "cmd+k cmd+t",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "alt+cmd+tab",
        "command": "-workbench.action.showAllEditors"
    },
    {
        "key": "cmd+t",
        "command": "-workbench.action.showAllSymbols"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorDown"
    },
    {
        "key": "cmd+k shift+cmd+\\",
        "command": "-workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorLeft"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorRight"
    },
    {
        "key": "cmd+k cmd+\\",
        "command": "-workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+w",
        "command": "-workbench.action.switchWindow"
    },
    {
        "key": "shift+cmd+b",
        "command": "-workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "alt+cmd+enter",
        "command": "-workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "cmd+enter",
        "command": "-workbench.action.terminal.chat.runCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "cmd+enter",
        "command": "-workbench.action.terminal.chat.runFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "cmd+i",
        "command": "-workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.action.terminal.clear",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.findNext",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.findPrevious",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+down",
        "command": "-workbench.action.terminal.focus",
        "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+up",
        "command": "-workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+f2",
        "command": "-workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "cmd+k cmd+i",
        "command": "-workbench.action.terminal.focusHover",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "shift+cmd+]",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+[",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+\\",
        "command": "-workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "cmd+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+backspace",
        "command": "-workbench.action.terminal.killActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "cmd+w",
        "command": "-workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+o",
        "command": "-workbench.action.terminal.openDetectedLink",
        "when": "terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "shift+cmd+g",
        "command": "-workbench.action.terminal.openDetectedLink",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "shift+cmd+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "cmd+v",
        "command": "-workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "enter",
        "command": "-workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "ctrl+cmd+down",
        "command": "-workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+left",
        "command": "-workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+right",
        "command": "-workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+cmd+up",
        "command": "-workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+r",
        "command": "-workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "alt+cmd+pagedown",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+end",
        "command": "-workbench.action.terminal.scrollToBottom",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+end",
        "command": "-workbench.action.terminal.scrollToBottomAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "cmd+down",
        "command": "-workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "cmd+up",
        "command": "-workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "cmd+home",
        "command": "-workbench.action.terminal.scrollToTop",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "cmd+home",
        "command": "-workbench.action.terminal.scrollToTopAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "alt+cmd+pageup",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "cmd+a",
        "command": "-workbench.action.terminal.selectAll",
        "when": "terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+down",
        "command": "-workbench.action.terminal.selectToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+up",
        "command": "-workbench.action.terminal.selectToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+cmd+right",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellIntegrationEnabled && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u001b[24~d"
        }
    },
    {
        "key": "shift+cmd+left",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus && terminalShellType == 'pwsh'",
        "args": {
            "text": "\u001b[1;2H"
        }
    },
    {
        "key": "alt+backspace",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0017"
        }
    },
    {
        "key": "alt+delete",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u001bd"
        }
    },
    {
        "key": "cmd+backspace",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0015"
        }
    },
    {
        "key": "cmd+left",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0001"
        }
    },
    {
        "key": "cmd+right",
        "command": "-workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0005"
        }
    },
    {
        "key": "cmd+.",
        "command": "-workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.splitActiveTab",
        "when": "terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "alt+cmd+c",
        "command": "-workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+r",
        "command": "-workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "alt+cmd+i",
        "command": "-workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "alt+cmd+0",
        "command": "-workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "ctrl+cmd+f",
        "command": "-workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "cmd+k cmd+m",
        "command": "-workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "cmd+j",
        "command": "-workbench.action.togglePanel"
    },
    {
        "key": "cmd+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "cmd+k z",
        "command": "-workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "cmd+k shift+enter",
        "command": "-workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "cmd+numpad_add",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "shift+cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+=",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "cmd+numpad_subtract",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "shift+cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+-",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "cmd+numpad0",
        "command": "-workbench.action.zoomReset"
    },
    {
        "key": "shift+cmd+m",
        "command": "-workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "shift+cmd+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "cmd+k",
        "command": "-workbench.debug.panel.action.clearReplAction",
        "when": "focusedView == 'workbench.panel.repl.view'"
    },
    {
        "key": "cmd+k c",
        "command": "-workbench.files.action.compareWithClipboard"
    },
    {
        "key": "cmd+k d",
        "command": "-workbench.files.action.compareWithSaved"
    },
    {
        "key": "cmd+k e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+cmd+i",
        "command": "-workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "shift+cmd+i",
        "command": "-workbench.panel.chatEditing",
        "when": "workbench.panel.chat.view.edits.active"
    },
    {
        "key": "shift+cmd+d",
        "command": "-workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "shift+cmd+e",
        "command": "-workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "shift+cmd+x",
        "command": "-workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "shift+cmd+f",
        "command": "-workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "key": "ctrl+enter",
        "command": "acceptRenameInputWithPreview",
        "when": "config.editor.rename.enablePreview && editorFocus && renameInputVisible && !isComposing"
    },
    {
        "key": "ctrl+.",
        "command": "acceptSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+shift+l",
        "command": "addCursorsAtSearchResults",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+;",
        "command": "breadcrumbs.focus",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+shift+.",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "breadcrumbs.focusNext",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+right",
        "command": "breadcrumbs.focusNextWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+left",
        "command": "breadcrumbs.focusPrevious",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+left",
        "command": "breadcrumbs.focusPreviousWithPicker",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocused",
        "when": "breadcrumbsActive && breadcrumbsVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "breadcrumbs.revealFocusedFromTreeAside",
        "when": "breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+.",
        "command": "breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "chatCursorAtTop && inChatInput && !quickChatHasFocus"
    },
    {
        "key": "ctrl+up",
        "command": "chat.action.focus",
        "when": "inChatInput && isLinux && !quickChatHasFocus || inChatInput && isWindows && !quickChatHasFocus"
    },
    {
        "key": "ctrl+down",
        "command": "chat.action.focus",
        "when": "inChat && inChatInput && quickChatHasFocus"
    },
    {
        "key": "ctrl+c",
        "command": "chat.inlineResourceAnchor.copyResource",
        "when": "chatAttachmentResource"
    },
    {
        "key": "ctrl+enter",
        "command": "chatEditing.acceptAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+backspace",
        "command": "chatEditing.discardAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatInputHasText && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+s",
        "command": "chatEditing.saveAllFiles",
        "when": "hasUndecidedChatEditingResource && inChatInput && !chatSessionRequestInProgress && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+enter",
        "command": "chatEditor.action.accept",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "ctrl+backspace",
        "command": "chatEditor.action.reject",
        "when": "chat.hasEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress || chat.hasNotebookEditorModifications && editorFocus && hasUndecidedChatEditingResource && !chat.ctxHasRequestInProgress"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "chatEditor.action.undoHunk",
        "when": "editorFocus && hasUndecidedChatEditingResource && !chatSessionRequestInProgress"
    },
    {
        "key": "ctrl+f",
        "command": "commentsFocusFilter",
        "when": "focusedView == 'workbench.panel.comments'"
    },
    {
        "key": "ctrl+down",
        "command": "commentsFocusViewFromFilter",
        "when": "commentsFilterFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "copyFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "copyFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+alt+c",
        "command": "copyRelativeFilePath",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+alt+c",
        "command": "copyRelativeFilePath",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+end",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+end",
        "command": "cursorBottomSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+home",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+home",
        "command": "cursorTopSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "cursorUndo",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordAccessibilityLeft",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordAccessibilityLeftSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordAccessibilityRight",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordAccessibilityRightSelect",
        "when": "accessibilityModeEnabled && isWindows && textInputFocus && focusedView == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+right",
        "command": "cursorWordEndRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+right",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+left",
        "command": "cursorWordLeft",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+left",
        "command": "cursorWordLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "debug.openBreakpointToSide",
        "when": "breakpointsFocused"
    },
    {
        "key": "ctrl+f5",
        "command": "debug.openView",
        "when": "!debuggersAvailable"
    },
    {
        "key": "delete",
        "command": "debug.removeBreakpoint",
        "when": "breakpointsFocused && !breakpointInputFocused"
    },
    {
        "key": "delete",
        "command": "debug.removeWatchExpression",
        "when": "watchExpressionsFocused && !expressionSelected"
    },
    {
        "key": "f2",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "f2",
        "command": "debug.setVariable",
        "when": "variablesFocused"
    },
    {
        "key": "shift+delete",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "delete",
        "command": "deleteFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+f1",
        "command": "editor.action.accessibilityHelp",
        "when": "!accessibilityHelpIsShown"
    },
    {
        "key": "shift+alt+f2",
        "command": "editor.action.accessibleView"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "ctrl+shift+.",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "ctrl+shift+o",
        "command": "editor.action.accessibleViewGoToSymbol",
        "when": "accessibilityHelpIsShown && accessibleViewGoToSymbolSupported || accessibleViewGoToSymbolSupported && accessibleViewIsShown"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "editor.action.accessibleViewNextCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "editor.action.accessibleViewPreviousCodeBlock",
        "when": "accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'inlineChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'panelChat' || accessibleViewContainsCodeBlocks && accessibleViewCurrentProviderId == 'quickChat'"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "editor.action.addCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.addSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+[IntlBackslash]",
        "command": "editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "shift+alt+.",
        "command": "editor.action.autoFix",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "key": "ctrl+shift+a",
        "command": "editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f2",
        "command": "editor.action.changeAll",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+c",
        "command": "editor.action.clipboardCopyAction"
    },
    {
        "key": "ctrl+x",
        "command": "editor.action.clipboardCutAction"
    },
    {
        "key": "shift+insert",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+v",
        "command": "editor.action.clipboardPasteAction"
    },
    {
        "key": "ctrl+/",
        "command": "editor.action.commentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+down",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+alt+up",
        "command": "editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.defineKeybinding",
        "when": "resource == 'vscode-userdata:/home/runner/work/vs-code-default-keybindings/vs-code-default-keybindings/scripts/get_default_keybindings/empty2/User/keybindings.json'"
    },
    {
        "key": "ctrl+shift+k",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.extensioneditor.showfind",
        "when": "!editorFocus && activeEditor == 'workbench.editor.extension'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+shift+i",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+down",
        "command": "editor.action.goToBottomHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus"
    },
    {
        "key": "ctrl+up",
        "command": "editor.action.goToTopHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+]",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+shift+[IntlBackslash]",
        "command": "editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+.",
        "command": "editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+[IntlBackslash]",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+,",
        "command": "editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "editor.action.insertLineBefore",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+f2",
        "command": "editor.action.linkedEditing",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+d",
        "command": "editor.action.moveSelectionToNextFindMatch",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+alt+down",
        "command": "editor.action.nextCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "ctrl+f3",
        "command": "editor.action.nextSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+[",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+f10",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "editor.action.peekImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+alt+up",
        "command": "editor.action.previousCommentingRange",
        "when": "accessibilityModeEnabled && commentFocused || accessibilityModeEnabled && editorFocus || accessibilityHelpIsShown && accessibilityModeEnabled && accessibleViewCurrentProviderId == 'comments'"
    },
    {
        "key": "ctrl+shift+f3",
        "command": "editor.action.previousSelectionMatchFindAction",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+.",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+backspace",
        "command": "editor.action.removeBrackets",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+u",
        "command": "editor.action.removeCommentLine",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "editor.action.replaceAll",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "editor.action.replaceOne",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "ctrl+f12",
        "command": "editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb"
    },
    {
        "key": "ctrl+k f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+k ctrl+f12",
        "command": "editor.action.revealDefinitionAside",
        "when": "editorHasDefinitionProvider && editorTextFocus && isWeb && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.selectAll"
    },
    {
        "key": "ctrl+k ctrl+k",
        "command": "editor.action.selectFromAnchorToCursor",
        "when": "editorTextFocus && selectionAnchorSet"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.selectHighlights",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k ctrl+b",
        "command": "editor.action.setSelectionAnchor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "editor.action.smartSelect.expand",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+enter",
        "command": "editor.action.submitComment",
        "when": "commentEditorFocused"
    },
    {
        "key": "insert",
        "command": "editor.action.toggleOvertypeInsertMode"
    },
    {
        "key": "ctrl+e",
        "command": "editor.action.toggleScreenReaderAccessibilityMode",
        "when": "accessibilityHelpIsShown"
    },
    {
        "key": "shift+alt+f4",
        "command": "editor.action.toggleScreenReaderAccessibilityMode"
    },
    {
        "key": "ctrl+m",
        "command": "editor.action.toggleTabFocusMode"
    },
    {
        "key": "ctrl+shift+space",
        "command": "editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+k ctrl+x",
        "command": "editor.action.trimTrailingWhitespace",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.webvieweditor.showFind",
        "when": "webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+.",
        "command": "editor.changeDropType",
        "when": "dropWidgetVisible"
    },
    {
        "key": "ctrl+.",
        "command": "editor.changePasteType",
        "when": "pasteWidgetVisible"
    },
    {
        "key": "ctrl+k ctrl+,",
        "command": "editor.createFoldingRangeFromSelection",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "editor.debug.action.showDebugHover",
        "when": "editorTextFocus && inDebugMode"
    },
    {
        "key": "ctrl+shift+[",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+/",
        "command": "editor.foldAllBlockComments",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+-",
        "command": "editor.foldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+8",
        "command": "editor.foldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+1",
        "command": "editor.foldLevel1",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+2",
        "command": "editor.foldLevel2",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+3",
        "command": "editor.foldLevel3",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+4",
        "command": "editor.foldLevel4",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+5",
        "command": "editor.foldLevel5",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+6",
        "command": "editor.foldLevel6",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+7",
        "command": "editor.foldLevel7",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+[",
        "command": "editor.foldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+.",
        "command": "editor.removeManualFoldingRanges",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+l",
        "command": "editor.toggleFold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+shift+l",
        "command": "editor.toggleFoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+]",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+=",
        "command": "editor.unfoldAllExcept",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+9",
        "command": "editor.unfoldAllMarkerRegions",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+]",
        "command": "editor.unfoldRecursively",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+l",
        "command": "expandLineSelection",
        "when": "textInputFocus"
    },
    {
        "key": "enter",
        "command": "explorer.openAndPassFocus",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "filesExplorer.copy",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
    },
    {
        "key": "ctrl+x",
        "command": "filesExplorer.cut",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+v",
        "command": "filesExplorer.paste",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "focusSuggestion",
        "when": "suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "git.revertSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+alt+s",
        "command": "git.stageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "git.unstageSelectedRanges",
        "when": "isInDiffEditor && !operationInProgress"
    },
    {
        "key": "ctrl+enter",
        "command": "inlineChat.acceptChanges",
        "when": "inlineChatHasProvider && inlineChatVisible && !inlineChatDocumentChanged || inlineChatHasProvider && inlineChatVisible && config.inlineChat.mode != 'preview'"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorLast && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
        "key": "ctrl+up",
        "command": "inlineChat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatHasProvider && inlineChatInnerCursorFirst && !accessibilityModeEnabled && !isEmbeddedDiffEditor"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'above'"
    },
    {
        "key": "ctrl+up",
        "command": "inlineChat.focus",
        "when": "editorTextFocus && inlineChatVisible && !accessibilityModeEnabled && !inlineChatFocused && !isEmbeddedDiffEditor && inlineChatOuterCursorPosition == 'below'"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.holdForSpeech",
        "when": "hasSpeechProvider && inlineChatHasProvider && inlineChatVisible && textInputFocus"
    },
    {
        "key": "ctrl+r",
        "command": "inlineChat.regenerate",
        "when": "inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.start",
        "when": "editorFocus && inlineChatHasProvider && inlineChatPossible && !editorReadonly && !editorSimpleInput"
    },
    {
        "key": "ctrl+k i",
        "command": "inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "ctrl+i",
        "command": "inlineChat.startWithCurrentLine",
        "when": "inlineChatHasProvider && inlineChatShowingHint && !editorReadonly && !inlineChatVisible"
    },
    {
        "key": "ctrl+z",
        "command": "inlineChat.unstash",
        "when": "inlineChatHasStashedSession && !editorReadonly"
    },
    {
        "key": "ctrl+down",
        "command": "inlineChat.viewInChat",
        "when": "inChatInput && inlineChatHasProvider && inlineChatVisible"
    },
    {
        "key": "ctrl+enter",
        "command": "interactive.execute",
        "when": "isCompositeNotebook && activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "ctrl+up",
        "command": "interactive.history.focus",
        "when": "isCompositeNotebook && isLinux && !notebookEditorFocused || isCompositeNotebook && isWindows && !notebookEditorFocused"
    },
    {
        "key": "ctrl+up",
        "command": "interactive.history.focus",
        "when": "isCompositeNotebook && !notebookEditorFocused && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
    },
    {
        "key": "ctrl+end",
        "command": "interactive.scrollToBottom",
        "when": "activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "ctrl+home",
        "command": "interactive.scrollToTop",
        "when": "activeEditor == 'workbench.editor.interactive'"
    },
    {
        "key": "ctrl+k ctrl+a",
        "command": "keybindings.editor.addKeybinding",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+c",
        "command": "keybindings.editor.copyKeybindingEntry",
        "when": "inKeybindings && keybindingFocus && !whenFocus"
    },
    {
        "key": "ctrl+k ctrl+e",
        "command": "keybindings.editor.defineWhenExpression",
        "when": "inKeybindings && keybindingFocus"
    },
    {
        "key": "ctrl+down",
        "command": "keybindings.editor.focusKeybindings",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "delete",
        "command": "keybindings.editor.removeKeybinding",
        "when": "inKeybindings && keybindingFocus && !inputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "keybindings.editor.searchKeybindings",
        "when": "inKeybindings"
    },
    {
        "key": "alt+p",
        "command": "keybindings.editor.toggleSortByPrecedence",
        "when": "inKeybindings"
    },
    {
        "key": "ctrl+left",
        "command": "list.collapseAll",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+alt+f",
        "command": "list.find",
        "when": "listFocus && listSupportsFind"
    },
    {
        "key": "ctrl+alt+f",
        "command": "list.find.replInputFocus",
        "when": "view == 'workbench.panel.repl.view'"
    },
    {
        "key": "ctrl+down",
        "command": "list.scrollDown",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'bottom'"
    },
    {
        "key": "ctrl+up",
        "command": "list.scrollUp",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused && listScrollAtBoundary != 'both' && listScrollAtBoundary != 'top'"
    },
    {
        "key": "ctrl+a",
        "command": "list.selectAll",
        "when": "listFocus && listSupportsMultiselect && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "list.showHover",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "list.toggleSelection",
        "when": "listFocus && !inputFocus && !treestickyScrollFocused"
    },
    {
        "key": "ctrl+shift+v",
        "command": "markdown.showPreview",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+d",
        "command": "notebook.addFindMatchToSelection",
        "when": "config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.chat.acceptChanges",
        "when": "inlineChatFocused && notebookCellChatFocused && !notebookCellEditorFocused"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.chat.acceptChanges",
        "when": "notebookEditorFocused && !inputFocus && !notebookCellEditorFocused && notebookChatOuterFocusPosition == 'below'"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.arrowOutDown",
        "when": "inlineChatFocused && inlineChatInnerCursorLast && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.arrowOutUp",
        "when": "inlineChatFocused && inlineChatInnerCursorFirst && notebookCellChatFocused && !accessibilityModeEnabled && !notebookCellEditorFocused"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'above'"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.focus",
        "when": "notebookEditorFocused && !inputFocus && notebookChatOuterFocusPosition == 'below'"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.chat.focusNextCell",
        "when": "inlineChatFocused && notebookCellChatFocused"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.chat.focusPreviousCell",
        "when": "inlineChatFocused && notebookCellChatFocused"
    },
    {
        "key": "ctrl+k i",
        "command": "notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+i",
        "command": "notebook.cell.chat.start",
        "when": "config.notebook.experimental.cellChat && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus || config.notebook.experimental.generate && notebookChatAgentRegistered && notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.collapseCellInput",
        "when": "notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.collapseCellOutput",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
    },
    {
        "key": "delete",
        "command": "notebook.cell.delete",
        "when": "notebookEditorFocused && !inputFocus && !notebookOutputInputFocused"
    },
    {
        "key": "meta+enter",
        "command": "notebook.cell.execute",
        "when": "notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0 || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelSourceCount > 0"
    },
    {
        "key": "ctrl+k ctrl+c",
        "command": "notebook.cell.expandCellInput",
        "when": "notebookCellInputIsCollapsed && notebookCellListFocused"
    },
    {
        "key": "ctrl+k t",
        "command": "notebook.cell.expandCellOutput",
        "when": "notebookCellListFocused && notebookCellOutputIsCollapsed"
    },
    {
        "key": "ctrl+up",
        "command": "notebook.cell.focusChatWidget",
        "when": "editorTextFocus && inputFocus && notebookEditorFocused && !accessibilityModeEnabled && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.focusInOutput",
        "when": "isWindows && notebookCellHasOutputs && notebookEditorFocused && !isCompositeNotebook"
    },
    {
        "key": "ctrl+shift+down",
        "command": "notebook.cell.focusInOutput",
        "when": "notebookCellHasOutputs && notebookEditorFocused"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.cell.focusNextChatWidget",
        "when": "editorTextFocus && inputFocus && isCompositeNotebook && !accessibilityModeEnabled && !isEmbeddedDiffEditor && !notebookCellEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top' || editorTextFocus && inputFocus && notebookCellEditorFocused && !accessibilityModeEnabled && !isCompositeNotebook && !isEmbeddedDiffEditor && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
    },
    {
        "key": "ctrl+shift+up",
        "command": "notebook.cell.focusOutOutput",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "notebook.cell.insertCodeCellAbove",
        "when": "notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "notebook.cell.insertCodeCellBelow",
        "when": "notebookCellListFocused && !inputFocus && notebookChatOuterFocusPosition == ''"
    },
    {
        "key": "shift+alt+meta+j",
        "command": "notebook.cell.joinAbove",
        "when": "notebookEditorFocused"
    },
    {
        "key": "alt+meta+j",
        "command": "notebook.cell.joinBelow",
        "when": "notebookEditorFocused"
    },
    {
        "key": "ctrl+.",
        "command": "notebook.cell.openFailureActions",
        "when": "notebookCellFocused && notebookCellHasErrorDiagnostics && !notebookCellEditorFocused"
    },
    {
        "key": "ctrl+a",
        "command": "notebook.cell.output.selectAll",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+shift+v",
        "command": "notebook.cell.pasteAbove",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "meta+enter",
        "command": "notebook.cell.quitEdit",
        "when": "inputFocus && notebookEditorFocused && !inlineChatFocused && notebookCellType == 'markup'"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "notebook.cell.split",
        "when": "editorTextFocus && notebookCellEditable && notebookEditable && notebookEditorFocused"
    },
    {
        "key": "ctrl+k y",
        "command": "notebook.cell.toggleOutputScrolling",
        "when": "notebookCellHasOutputs && notebookCellListFocused && !inputFocus"
    },
    {
        "key": "ctrl+/",
        "command": "notebook.commentSelectedCells",
        "when": "notebookEditable && notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "notebook.find",
        "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+end",
        "command": "notebook.focusBottom",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+down",
        "command": "notebook.focusNextEditor",
        "when": "notebookEditorFocused && notebookOutputFocused"
    },
    {
        "key": "ctrl+pagedown",
        "command": "notebook.focusNextEditor",
        "when": "accessibilityModeEnabled && notebookCellEditorFocused"
    },
    {
        "key": "ctrl+home",
        "command": "notebook.focusTop",
        "when": "notebookEditorFocused && !inputFocus"
    },
    {
        "key": "ctrl+shift+[",
        "command": "notebook.fold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "notebook.format",
        "when": "notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+i",
        "command": "notebook.formatCell",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+l",
        "command": "notebook.selectAllFindMatches",
        "when": "config.notebook.multiCursor.enabled && notebookFindWidgetFocused || config.notebook.multiCursor.enabled && notebookCellEditorFocused && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+]",
        "command": "notebook.unfold",
        "when": "notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+shift+a",
        "command": "notification.acceptPrimaryAction",
        "when": "notificationFocus || notificationToastsVisible"
    },
    {
        "key": "delete",
        "command": "notification.clear",
        "when": "notificationFocus"
    },
    {
        "key": "ctrl+k ctrl+shift+n",
        "command": "notifications.showList"
    },
    {
        "key": "ctrl+enter",
        "command": "previewSelectedCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+c",
        "command": "problems.action.copy",
        "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "ctrl+f",
        "command": "problems.action.focusFilter",
        "when": "focusedView == 'workbench.panel.markers.view'"
    },
    {
        "key": "ctrl+down",
        "command": "problems.action.focusProblemsFromFilter",
        "when": "problemsFilterFocus"
    },
    {
        "key": "ctrl+.",
        "command": "problems.action.showQuickFixes",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+alt+down",
        "command": "quickInput.nextSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+down",
        "command": "quickInput.nextSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+alt+up",
        "command": "quickInput.previousSeparator",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "alt+up",
        "command": "quickInput.previousSeparatorWithQuickAccessFallback",
        "when": "inQuickInput && quickInputType == 'quickPick'"
    },
    {
        "key": "ctrl+shift+z",
        "command": "redo"
    },
    {
        "key": "ctrl+y",
        "command": "redo"
    },
    {
        "key": "ctrl+enter",
        "command": "refactorPreview.apply",
        "when": "refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
    },
    {
        "key": "ctrl+c",
        "command": "remote.tunnel.copyAddressInline",
        "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
    },
    {
        "key": "f2",
        "command": "remote.tunnel.label",
        "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
    },
    {
        "key": "f2",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "repl.action.filter",
        "when": "inDebugRepl && textInputFocus"
    },
    {
        "key": "ctrl+alt+f",
        "command": "repl.action.find",
        "when": "inDebugRepl || inDebugRepl && focusedView == 'workbench.panel.repl.view'"
    },
    {
        "key": "ctrl+enter",
        "command": "repl.execute",
        "when": "isCompositeNotebook && activeEditor == 'workbench.editor.repl'"
    },
    {
        "key": "ctrl+down",
        "command": "repl.input.focus",
        "when": "isCompositeNotebook && notebookEditorFocused"
    },
    {
        "key": "ctrl+shift+r",
        "command": "rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+alt+r",
        "command": "revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "ctrl+enter",
        "command": "scm.acceptInput",
        "when": "scmRepository"
    },
    {
        "key": "ctrl+down",
        "command": "scrollLineDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+up",
        "command": "scrollLineUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pagedown",
        "command": "scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pageup",
        "command": "scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+c",
        "command": "search.action.copyMatch",
        "when": "fileMatchOrMatchFocus"
    },
    {
        "key": "ctrl+alt+c",
        "command": "search.action.copyPath",
        "when": "fileMatchOrFolderMatchWithResourceFocus"
    },
    {
        "key": "ctrl+up",
        "command": "search.action.focusSearchFromResults",
        "when": "accessibilityModeEnabled && searchViewletVisible || firstMatchFocus && searchViewletVisible"
    },
    {
        "key": "alt+enter",
        "command": "search.action.openInEditor",
        "when": "hasSearchResult && searchViewletFocus"
    },
    {
        "key": "delete",
        "command": "search.action.remove",
        "when": "fileMatchOrMatchFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replace",
        "when": "isEditableItem && matchFocus && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "search.action.replaceAll",
        "when": "replaceActive && searchViewletVisible && !findWidgetVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFile",
        "when": "fileMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+shift+1",
        "command": "search.action.replaceAllInFolder",
        "when": "folderMatchFocus && isEditableItem && replaceActive && searchViewletVisible"
    },
    {
        "key": "ctrl+down",
        "command": "search.focus.nextInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
    },
    {
        "key": "ctrl+up",
        "command": "search.focus.previousInputBox",
        "when": "inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
    },
    {
        "key": "ctrl+shift+backspace",
        "command": "search.searchEditor.action.deleteFileResults",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+l",
        "command": "selectAllSearchEditorMatches",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+down",
        "command": "selectNextCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+pagedown",
        "command": "selectNextPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+down",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+up",
        "command": "selectPrevCodeAction",
        "when": "codeActionMenuVisible"
    },
    {
        "key": "ctrl+pageup",
        "command": "selectPrevPageSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+up",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "ctrl+f",
        "command": "settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+; ctrl+x",
        "command": "testing.cancelRun"
    },
    {
        "key": "ctrl+; ctrl+shift+a",
        "command": "testing.coverageAll"
    },
    {
        "key": "ctrl+; ctrl+shift+c",
        "command": "testing.coverageAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+shift+f",
        "command": "testing.coverageCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+shift+l",
        "command": "testing.coverageLastRun"
    },
    {
        "key": "ctrl+; ctrl+a",
        "command": "testing.debugAll"
    },
    {
        "key": "ctrl+; ctrl+c",
        "command": "testing.debugAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+f",
        "command": "testing.debugCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+e",
        "command": "testing.debugFailTests"
    },
    {
        "key": "ctrl+; ctrl+l",
        "command": "testing.debugLastRun"
    },
    {
        "key": "ctrl+; ctrl+m",
        "command": "testing.openOutputPeek"
    },
    {
        "key": "ctrl+; ctrl+r",
        "command": "testing.refreshTests",
        "when": "testing.canRefresh"
    },
    {
        "key": "ctrl+; e",
        "command": "testing.reRunFailTests"
    },
    {
        "key": "ctrl+; l",
        "command": "testing.reRunLastRun"
    },
    {
        "key": "ctrl+; a",
        "command": "testing.runAll"
    },
    {
        "key": "ctrl+; c",
        "command": "testing.runAtCursor",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; f",
        "command": "testing.runCurrentFile",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+; ctrl+o",
        "command": "testing.showMostRecentOutput",
        "when": "testing.hasAnyResults"
    },
    {
        "key": "ctrl+; ctrl+shift+i",
        "command": "testing.toggleInlineCoverage"
    },
    {
        "key": "ctrl+; ctrl+i",
        "command": "testing.toggleInlineTestOutput"
    },
    {
        "key": "ctrl+/",
        "command": "toggleExplainMode",
        "when": "suggestWidgetVisible"
    },
    {
        "key": "alt+c",
        "command": "toggleFindCaseSensitive",
        "when": "editorFocus"
    },
    {
        "key": "alt+l",
        "command": "toggleFindInSelection",
        "when": "editorFocus"
    },
    {
        "key": "alt+r",
        "command": "toggleFindRegex",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+k f2",
        "command": "togglePeekWidgetFocus",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "alt+p",
        "command": "togglePreserveCase",
        "when": "editorFocus"
    },
    {
        "key": "alt+c",
        "command": "toggleSearchCaseSensitive",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+c",
        "command": "toggleSearchEditorCaseSensitive",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+l",
        "command": "toggleSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+r",
        "command": "toggleSearchEditorRegex",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+p",
        "command": "toggleSearchPreserveCase",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+r",
        "command": "toggleSearchRegex",
        "when": "searchViewletFocus"
    },
    {
        "key": "alt+w",
        "command": "toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+i",
        "command": "toggleSuggestionDetails",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+z",
        "command": "undo"
    },
    {
        "key": "ctrl+k down",
        "command": "views.moveViewDown",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k left",
        "command": "views.moveViewLeft",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k right",
        "command": "views.moveViewRight",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+k up",
        "command": "views.moveViewUp",
        "when": "focusedView != ''"
    },
    {
        "key": "ctrl+alt+meta+n",
        "command": "welcome.showNewFileEntries"
    },
    {
        "key": "ctrl+down",
        "command": "widgetNavigation.focusNext",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'bottom'"
    },
    {
        "key": "ctrl+up",
        "command": "widgetNavigation.focusPrevious",
        "when": "inputFocus && navigableContainerFocused || navigableContainerFocused && treestickyScrollFocused || navigableContainerFocused && !listFocus || navigableContainerFocused && listScrollAtBoundary == 'both' || navigableContainerFocused && listScrollAtBoundary == 'top'"
    },
    {
        "key": "ctrl+k ctrl+alt+c",
        "command": "workbench.action.addComment",
        "when": "activeCursorHasCommentingRange"
    },
    {
        "key": "ctrl+/",
        "command": "workbench.action.chat.attachContext",
        "when": "inChatInput && chatLocation == 'editing-session' || inChatInput && chatLocation == 'editor' || inChatInput && chatLocation == 'notebook' || inChatInput && chatLocation == 'panel' || inChatInput && chatLocation == 'terminal'"
    },
    {
        "key": "ctrl+escape",
        "command": "workbench.action.chat.cancel"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.chat.focusInput",
        "when": "inChat && !inChatInput && !quickChatHasFocus"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.chat.focusInput",
        "when": "inChat && quickChatHasFocus && !inChatInput"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.holdToVoiceChatInChatView",
        "when": "chatIsEnabled && hasSpeechProvider && !chatSessionRequestInProgress && !editorFocus && !inChatInput && !inlineChatFocused && !notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "workbench.action.chat.nextCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "ctrl+f9",
        "command": "workbench.action.chat.nextFileTree",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.action.chat.open",
        "when": "chatPanelParticipantRegistered || chatSetupInstalled"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "workbench.action.chat.openEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && view != 'workbench.panel.chat.view.edits'"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "workbench.action.chat.previousCodeBlock",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "ctrl+shift+f9",
        "command": "workbench.action.chat.previousFileTree",
        "when": "chatIsEnabled && inChat"
    },
    {
        "key": "delete",
        "command": "workbench.action.chat.remove",
        "when": "inChat && !inChatInput && chatLocation != 'editing-session'"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.chat.sendToChatEditing",
        "when": "chatEditingParticipantRegistered && chatInputHasText && chatIsEnabled && !chatInputHasAgent && !chatSessionRequestInProgress && chatLocation != 'editing-session' && chatLocation != 'editor'"
    },
    {
        "key": "ctrl+shift+enter",
        "command": "workbench.action.chat.sendToNewChat",
        "when": "chatInputHasText && inChatInput && !chatSessionRequestInProgress"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.chat.stopListeningAndSubmit",
        "when": "inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inChatInput && voiceChatInProgress && scopedVoiceChatInProgress == 'view' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'editor' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'inline' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'quick' || inlineChatFocused && voiceChatInProgress && scopedVoiceChatInProgress == 'view'"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.chat.submitSecondaryAgent",
        "when": "chatInputHasText && inChatInput && !chatInputHasAgent && !chatSessionRequestInProgress"
    },
    {
        "key": "delete",
        "command": "workbench.action.chat.undoEdits",
        "when": "inChat && !inChatInput && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeActiveEditor"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k w",
        "command": "workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+k f",
        "command": "workbench.action.closeFolder",
        "when": "emptyWorkspaceSupport && workbenchState != 'empty'"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.closeGroup",
        "when": "activeEditorGroupEmpty && multipleEditorGroups"
    },
    {
        "key": "ctrl+k u",
        "command": "workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "ctrl+shift+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "alt+f4",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+k shift+o",
        "command": "workbench.action.compareEditor.openSide",
        "when": "inDiffEditor"
    },
    {
        "key": "ctrl+k o",
        "command": "workbench.action.copyEditorToNewWindow",
        "when": "activeEditor"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.debug.nextConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.debug.prevConsole",
        "when": "inDebugRepl"
    },
    {
        "key": "ctrl+shift+f5",
        "command": "workbench.action.debug.restart",
        "when": "inDebugMode"
    },
    {
        "key": "ctrl+f11",
        "command": "workbench.action.debug.stepIntoTarget",
        "when": "inDebugMode && stepIntoTargetsSupported && debugState == 'stopped'"
    },
    {
        "key": "ctrl+k m",
        "command": "workbench.action.editor.changeLanguageMode",
        "when": "!notebookEditorFocused"
    },
    {
        "key": "ctrl+alt+v",
        "command": "workbench.action.editorDictation.start",
        "when": "hasSpeechProvider && !editorReadonly && !speechToTextInProgress"
    },
    {
        "key": "ctrl+k p",
        "command": "workbench.action.files.copyPathOfActiveFile"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.files.newUntitledFile"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFile",
        "when": "true"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFileFolder",
        "when": "isMacNative && openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openFolderViaWorkspace",
        "when": "!openFolderWorkspaceSupport && workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+o",
        "command": "workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+k ctrl+o",
        "command": "workbench.action.files.openLocalFolder",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+k r",
        "command": "workbench.action.files.revealActiveFileInWindows"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveAs"
    },
    {
        "key": "ctrl+shift+s",
        "command": "workbench.action.files.saveLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+k s",
        "command": "workbench.action.files.saveWithoutFormatting"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.findInFiles"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "workbench.action.focusAboveGroup"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "workbench.action.focusBelowGroup"
    },
    {
        "key": "ctrl+8",
        "command": "workbench.action.focusEighthEditorGroup"
    },
    {
        "key": "ctrl+5",
        "command": "workbench.action.focusFifthEditorGroup"
    },
    {
        "key": "ctrl+1",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+4",
        "command": "workbench.action.focusFourthEditorGroup"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "workbench.action.focusRightGroup"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    {
        "key": "ctrl+7",
        "command": "workbench.action.focusSeventhEditorGroup"
    },
    {
        "key": "ctrl+0",
        "command": "workbench.action.focusSideBar"
    },
    {
        "key": "ctrl+6",
        "command": "workbench.action.focusSixthEditorGroup"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.focusThirdEditorGroup"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.gotoSymbol",
        "when": "!accessibilityHelpIsShown && !accessibleViewIsShown"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "workbench.action.joinEditorInGroup",
        "when": "sideBySideEditorActive"
    },
    {
        "key": "ctrl+k enter",
        "command": "workbench.action.keepEditor"
    },
    {
        "key": "ctrl+k ctrl+r",
        "command": "workbench.action.keybindingsReference"
    },
    {
        "key": "ctrl+9",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+k down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k up",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "shift+alt+1",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "ctrl+alt+right",
        "command": "workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "ctrl+alt+left",
        "command": "workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "ctrl+alt+-",
        "command": "workbench.action.navigateBack",
        "when": "canNavigateBack"
    },
    {
        "key": "ctrl+k ctrl+q",
        "command": "workbench.action.navigateToLastEditLocation"
    },
    {
        "key": "ctrl+shift+n",
        "command": "workbench.action.newWindow"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.nextEditor"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.openEditorAtIndex1"
    },
    {
        "key": "alt+2",
        "command": "workbench.action.openEditorAtIndex2"
    },
    {
        "key": "alt+3",
        "command": "workbench.action.openEditorAtIndex3"
    },
    {
        "key": "alt+4",
        "command": "workbench.action.openEditorAtIndex4"
    },
    {
        "key": "alt+5",
        "command": "workbench.action.openEditorAtIndex5"
    },
    {
        "key": "alt+6",
        "command": "workbench.action.openEditorAtIndex6"
    },
    {
        "key": "alt+7",
        "command": "workbench.action.openEditorAtIndex7"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.openEditorAtIndex8"
    },
    {
        "key": "alt+9",
        "command": "workbench.action.openEditorAtIndex9"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+,",
        "command": "workbench.action.openSettings"
    },
    {
        "key": "ctrl+k ctrl+h",
        "command": "workbench.action.output.toggleOutput",
        "when": "workbench.panel.output.active"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.pinEditor",
        "when": "!activeEditorIsPinned"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.previousEditor"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+shift+alt+l",
        "command": "workbench.action.quickchat.toggle",
        "when": "chatIsEnabled"
    },
    {
        "key": "ctrl+alt+-",
        "command": "workbench.action.quickInputBack",
        "when": "inQuickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+p",
        "command": "workbench.action.quickOpenNavigateNextInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.quickOpenNavigatePreviousInFilePicker",
        "when": "inFilesPicker && inQuickOpen"
    },
    {
        "key": "ctrl+q",
        "command": "workbench.action.quit"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.reloadWindow",
        "when": "isDevelopment"
    },
    {
        "key": "ctrl+alt+o",
        "command": "workbench.action.remote.showMenu"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+h",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+j",
        "command": "workbench.action.search.toggleQueryDetails",
        "when": "inSearchEditor || searchViewletFocus"
    },
    {
        "key": "ctrl+k ctrl+t",
        "command": "workbench.action.selectTheme"
    },
    {
        "key": "ctrl+k ctrl+p",
        "command": "workbench.action.showAllEditors"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.showAllSymbols"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+\\",
        "command": "workbench.action.splitEditor"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorDown"
    },
    {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "workbench.action.splitEditorInGroup",
        "when": "activeEditorCanSplitInGroup"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorLeft"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorRight"
    },
    {
        "key": "ctrl+k ctrl+\\",
        "command": "workbench.action.splitEditorUp"
    },
    {
        "key": "ctrl+shift+b",
        "command": "workbench.action.tasks.build",
        "when": "taskCommandsRegistered"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.terminal.chat.insertCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "ctrl+alt+enter",
        "command": "workbench.action.terminal.chat.insertFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.runCommand",
        "when": "terminalChatResponseContainsCodeBlock && terminalHasBeenCreated && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks || terminalChatResponseContainsCodeBlock && terminalProcessSupported && !terminalChatActiveRequest && !terminalChatResponseContainsMultipleCodeBlocks"
    },
    {
        "key": "ctrl+enter",
        "command": "workbench.action.terminal.chat.runFirstCommand",
        "when": "terminalChatResponseContainsMultipleCodeBlocks && terminalHasBeenCreated && !terminalChatActiveRequest || terminalChatResponseContainsMultipleCodeBlocks && terminalProcessSupported && !terminalChatActiveRequest"
    },
    {
        "key": "ctrl+i",
        "command": "workbench.action.terminal.chat.start",
        "when": "terminalChatAgentRegistered && terminalFocusInAny && terminalHasBeenCreated || terminalChatAgentRegistered && terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.focus",
        "when": "accessibilityModeEnabled && accessibleViewOnLastLine && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewOnLastLine && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+alt+f2",
        "command": "workbench.action.terminal.focusAccessibleBuffer",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "workbench.action.terminal.focusHover",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalIsOpen || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+pagedown",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+pageup",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+\\",
        "command": "workbench.action.terminal.focusTabs",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.killEditor",
        "when": "terminalEditorFocus && terminalFocus && terminalHasBeenCreated || terminalEditorFocus && terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+o",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "terminalFocus && terminalHasBeenCreated"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.terminal.openDetectedLink",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "ctrl+shift+c",
        "command": "workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "ctrl+shift+v",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+insert",
        "command": "workbench.action.terminal.pasteSelection",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "f2",
        "command": "workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "ctrl+shift+left",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+right",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.terminal.runRecentCommand",
        "when": "accessibilityModeEnabled && terminalFocus && terminalHasBeenCreated || accessibilityModeEnabled && terminalFocus && terminalProcessSupported || accessibilityModeEnabled && accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibilityModeEnabled && accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.terminal.scrollDown",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+pagedown",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+end",
        "command": "workbench.action.terminal.scrollToBottom",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+end",
        "command": "workbench.action.terminal.scrollToBottomAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.scrollToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.scrollToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated && !accessibilityModeEnabled || terminalFocus && terminalProcessSupported && !accessibilityModeEnabled"
    },
    {
        "key": "shift+home",
        "command": "workbench.action.terminal.scrollToTop",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+home",
        "command": "workbench.action.terminal.scrollToTopAccessibleView",
        "when": "accessibleViewIsShown && terminalHasBeenCreated && accessibleViewCurrentProviderId == 'terminal' || accessibleViewIsShown && terminalProcessSupported && accessibleViewCurrentProviderId == 'terminal'"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.terminal.scrollUp",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "shift+pageup",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocusInAny && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocusInAny && terminalProcessSupported && !terminalAltBufferActive"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.action.terminal.searchWorkspace",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "ctrl+shift+down",
        "command": "workbench.action.terminal.selectToNextCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+up",
        "command": "workbench.action.terminal.selectToPreviousCommand",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+backspace",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u0017"
        }
    },
    {
        "key": "ctrl+delete",
        "command": "workbench.action.terminal.sendSequence",
        "when": "terminalFocus",
        "args": {
            "text": "\u001bd"
        }
    },
    {
        "key": "ctrl+.",
        "command": "workbench.action.terminal.showQuickFixes",
        "when": "terminalFocus"
    },
    {
        "key": "alt+c",
        "command": "workbench.action.terminal.toggleFindCaseSensitive",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.terminal.toggleFindRegex",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindVisible && terminalHasBeenCreated || terminalFindVisible && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+b",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+shift+i",
        "command": "workbench.action.toggleDevTools",
        "when": "isDevelopment"
    },
    {
        "key": "shift+alt+0",
        "command": "workbench.action.toggleEditorGroupLayout"
    },
    {
        "key": "f11",
        "command": "workbench.action.toggleFullScreen",
        "when": "!isIOS"
    },
    {
        "key": "ctrl+k ctrl+m",
        "command": "workbench.action.toggleMaximizeEditorGroup",
        "when": "editorPartMaximizedEditorGroup || editorPartMultipleEditorGroups"
    },
    {
        "key": "ctrl+j",
        "command": "workbench.action.togglePanel"
    },
    {
        "key": "ctrl+b",
        "command": "workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "ctrl+k z",
        "command": "workbench.action.toggleZenMode",
        "when": "!isAuxiliaryWindowFocusedContext"
    },
    {
        "key": "ctrl+k shift+enter",
        "command": "workbench.action.unpinEditor",
        "when": "activeEditorIsPinned"
    },
    {
        "key": "ctrl+numpad_add",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+=",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+numpad_subtract",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+-",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+numpad0",
        "command": "workbench.action.zoomReset"
    },
    {
        "key": "ctrl+shift+m",
        "command": "workbench.actions.view.problems",
        "when": "workbench.panel.markers.view.active"
    },
    {
        "key": "ctrl+shift+y",
        "command": "workbench.debug.action.toggleRepl",
        "when": "workbench.panel.repl.view.active"
    },
    {
        "key": "ctrl+k c",
        "command": "workbench.files.action.compareWithClipboard"
    },
    {
        "key": "ctrl+k d",
        "command": "workbench.files.action.compareWithSaved"
    },
    {
        "key": "ctrl+k e",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+alt+i",
        "command": "workbench.panel.chat",
        "when": "workbench.panel.chat.view.copilot.active"
    },
    {
        "key": "ctrl+shift+alt+i",
        "command": "workbench.panel.chatEditing",
        "when": "workbench.panel.chat.view.edits.active"
    },
    {
        "key": "ctrl+shift+d",
        "command": "workbench.view.debug",
        "when": "viewContainer.workbench.view.debug.enabled"
    },
    {
        "key": "ctrl+shift+e",
        "command": "workbench.view.explorer",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "key": "ctrl+shift+x",
        "command": "workbench.view.extensions",
        "when": "viewContainer.workbench.view.extensions.enabled"
    },
    {
        "key": "ctrl+shift+f",
        "command": "workbench.view.search",
        "when": "workbench.view.search.active && neverMatch =~ /doesNotMatch/"
    },
    {
        "1": "",
        "2": "",
        "3": "--------------------------- CUSTOM ---------------------------",
        "4": "",
        "5": ""
    },
    {
        "key": "alt+backspace",
        "command": "deleteWordLeft",
        "when": "textInputFocus && !editorReadonly && isMac"
    },
    {
        "key": "alt+delete",
        "command": "deleteWordRight",
        "when": "textInputFocus && !editorReadonly && isMac"
    },
    {
        "key": "ctrl+shift+s",
        "command": "saveAll"
    },
    {
        "key": "ctrl+a",
        "command": "editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+a",
        "command": "editor.action.selectAll",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+r",
        "command": "workbench.action.quickOpen",
        "args": "task ",
        "when": "editorTextFocus&&!isDevelopment"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.quickOpen",
        "args": "@: ",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+i",
        "command": "editor.action.insertSnippet"
    },
    {
        "command": "editor.action.selectHighlights",
        "key": "ctrl+shift+d",
        "when": "editorFocus"
    },
    {
        "command": "workbench.view.explorer",
        "key": "ctrl+1",
        "when": "viewContainer.workbench.view.explorer.enabled"
    },
    {
        "command": "workbench.action.debug.restart",
        "key": "f5",
        "when": "inDebugMode && debugState == 'running'"
    },
    {
        "command": "workbench.view.debug",
        "key": "ctrl+3"
    },
    {
        "command": "workbench.action.previousEditorInGroup",
        "key": "alt+left"
    },
    {
        "command": "workbench.action.nextEditorInGroup",
        "key": "alt+right"
    },
    {
        "command": "workbench.action.toggleSidebarVisibility",
        "key": "ctrl+oem_8"
    },
    {
        "command": "workbench.action.files.saveWithoutFormatting",
        "key": "alt+s"
    },
    {
        "command": "workbench.action.toggleZenMode",
        "key": "f11"
    },
    {
        "command": "workbench.action.openSettingsJson",
        "key": "ctrl+shift+e"
    },
    {
        "command": "notebook.execute",
        "key": "f5",
        "when": "notebookEditorFocused"
    },
    {
        "command": "testing.runCurrentFile",
        "key": "f5",
        "when": "testing.activeEditorHasTests"
    },
    {
        "command": "testing.debugCurrentFile",
        "key": "ctrl+f5",
        "when": "testing.activeEditorHasTests"
    },
    {
        "command": "workbench.action.closeOtherEditors",
        "key": "ctrl+shift+w"
    },
    {
        "command": "editor.action.jumpToBracket",
        "key": "ctrl+b",
        "when": "editorTextFocus && editorLangId!=markdown"
    },
    {
        "command": "workbench.action.quickOpenNavigateNextInViewPicker",
        "key": "ctrl+tab",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "command": "workbench.action.quickOpenView",
        "key": "ctrl+tab",
        "when": "!inQuickOpen"
    },
    {
        "command": "workbench.action.focusActiveEditorGroup",
        "key": "ctrl+e"
    },
    {
        "command": "workbench.action.quickOpenNavigatePreviousInViewPicker",
        "key": "ctrl+shift+tab",
        "when": "inQuickOpen && inViewsPicker"
    },
    {
        "command": "editor.action.marker.nextInFiles",
        "key": "ctrl+e",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.marker.prevInFiles",
        "key": "ctrl+shift+e",
        "when": "editorFocus"
    },
    {
        "command": "editor.action.goToImplementation",
        "key": "alt+enter",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "command": "editor.action.autoFix",
        "key": "ctrl+shift+oem_period",
        "when": "textInputFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
    },
    {
        "command": "editor.action.clipboardPasteAction",
        "key": "ctrl+v",
        "when": "!terminalFocus"
    },
    {
        "command": "references-view.findReferences",
        "key": "f4"
    },
    {
        "command": "references-view.findImplementations",
        "key": "f3"
    },
    {
        "command": "workbench.action.terminal.killEditor",
        "key": "ctrl+w",
        "when": "terminalFocus"
    },
    {
        "command": "editor.action.showHover",
        "key": "shift+space",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.terminal.toggleTerminal",
        "key": "ctrl+oem_5"
    },
    {
        "command": "workbench.action.terminal.clear",
        "key": "ctrl+k"
    },
    {
        "command": "editor.action.insertCursorAbove",
        "key": "shift+alt+up",
        "when": "editorTextFocus"
    },
    {
        "command": "editor.action.insertCursorBelow",
        "key": "shift+alt+down",
        "when": "editorTextFocus"
    },
    {
        "command": "workbench.action.terminal.openNativeConsole",
        "key": "ctrl+t"
    },
    {
        "command": "workbench.action.terminal.paste",
        "key": "ctrl+v",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "command": "editor.action.goToTypeDefinition",
        "key": "f1"
    },
    {
        "command": "toggle",
        "key": "ctrl+shift+i",
        "when": "editorTextFocus",
        "args": {
            "id": "minimap",
            "value": [
                {
                    "editor.inlayHints.enabled": "onUnlessPressed"
                },
                {
                    "editor.inlayHints.enabled": "offUnlessPressed"
                }
            ]
        }
    },
    {
        "command": "toggle",
        "key": "ctrl+shift+l",
        "when": "editorTextFocus",
        "args": {
            "id": "minimap",
            "value": [
                {
                    "editor.lineNumbers": "off"
                },
                {
                    "editor.lineNumbers": "on"
                }
            ]
        }
    },
    {
        "when": "terminalFocus",
        "key": "ctrl+left",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[1;5D"
        }
    },
    {
        "when": "terminalFocus",
        "key": "ctrl+right",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[1;5C"
        }
    },
    {
        "when": "!terminalTextSelectedInFocused && terminalFocus",
        "key": "cmd+c",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0003"
        }
    },
    {
        "when": "terminalFocus",
        "key": "ctrl+alt+left",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u001b[1;5D"
        }
    },
    {
        "when": "terminalFocus",
        "key": "ctrl+r",
        "command": "workbench.action.terminal.sendSequence",
        "args": {
            "text": "\u0012"
        }
    },
    {
        "when": "!terminalFocus",
        "key": "ctrl+r",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+q",
        "command": "git.openChange",
        "when": "editorFocus && !isInDiffEditor"
    },
    {
        "key": "ctrl+q",
        "command": "git.openFile",
        "when": "editorFocus && isInDiffEditor"
    }
]